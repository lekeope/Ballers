// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BallersAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ballers_API.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("PitchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2023, 2, 13, 2, 5, 55, 641, DateTimeKind.Local).AddTicks(7491),
                            CreatedOn = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7498),
                            Duration = 1.5f,
                            PitchId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Ballers_API.Models.Pitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PitchSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PitchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videoURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pitches");
                });

            modelBuilder.Entity("Ballers_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7169),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7220),
                            FirstName = "Thomas",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 3,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7223),
                            FirstName = "Carrick",
                            LastName = "Dean"
                        },
                        new
                        {
                            Id = 4,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7227),
                            FirstName = "Derrick",
                            LastName = "John"
                        },
                        new
                        {
                            Id = 5,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7231),
                            FirstName = "Daniel",
                            LastName = "Hogg"
                        },
                        new
                        {
                            Id = 6,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7236),
                            FirstName = "Joseph",
                            LastName = "Oink"
                        },
                        new
                        {
                            Id = 7,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 20, 5, 55, 641, DateTimeKind.Local).AddTicks(7240),
                            FirstName = "James",
                            LastName = "Balmer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
