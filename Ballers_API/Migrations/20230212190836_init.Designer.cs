// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BallersAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230212190836_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ballers_API.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("PitchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Ballers_API.Models.Pitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PitchSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PitchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pitches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "University of Lincoln Sports Center, Brayford Way, Lincoln",
                            CreatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3081),
                            LastUpdatedBy = 0,
                            LastUpdatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3131),
                            Note = "Best for Hockey, but Good enough for Football",
                            PitchSize = "_11v11",
                            PitchType = "ASTRO_TURF_2G",
                            PostCode = "LN67TS"
                        },
                        new
                        {
                            Id = 2,
                            Address = "University of Lincoln Sports Center, Brayford Way, Lincoln",
                            CreatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3137),
                            LastUpdatedBy = 0,
                            LastUpdatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3139),
                            Note = "Best for Football",
                            PitchSize = "_5v5",
                            PitchType = "ASTRO_TURF_3G",
                            PostCode = "LN67TS"
                        },
                        new
                        {
                            Id = 3,
                            Address = "University of Lincoln Sports Center, Brayford Way, Lincoln",
                            CreatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3208),
                            LastUpdatedBy = 0,
                            LastUpdatedOn = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3210),
                            Note = "Best for Football",
                            PitchSize = "_5v5",
                            PitchType = "ASTRO_TURF_3G",
                            PostCode = "LN67TS"
                        });
                });

            modelBuilder.Entity("Ballers_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3981),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3988),
                            FirstName = "Thomas",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 3,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3990),
                            FirstName = "Carrick",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 4,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3993),
                            FirstName = "Derrick",
                            LastName = "John"
                        },
                        new
                        {
                            Id = 5,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3995),
                            FirstName = "Daniel",
                            LastName = "Hogg"
                        },
                        new
                        {
                            Id = 6,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(3997),
                            FirstName = "Joe",
                            LastName = "Oink"
                        },
                        new
                        {
                            Id = 7,
                            AccessLevel = 0,
                            DateOfBirth = new DateTime(2023, 2, 12, 19, 8, 36, 706, DateTimeKind.Local).AddTicks(4000),
                            FirstName = "James",
                            LastName = "Balmer"
                        });
                });

            modelBuilder.Entity("Ballers_API.Models.Booking", b =>
                {
                    b.HasOne("Ballers_API.Models.User", null)
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ballers_API.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
